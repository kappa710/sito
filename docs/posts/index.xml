<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:content="http://purl.org/rss/1.0/modules/content/">
  <channel>
    <title>Posts on Cyber Noob</title>
    <link>https://kappa710.github.io/prova/posts/</link>
    <description>Recent content in Posts on Cyber Noob</description>
    <generator>Hugo -- 0.147.0</generator>
    <language>en-us</language>
    <atom:link href="https://kappa710.github.io/prova/posts/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title></title>
      <link>https://kappa710.github.io/prova/posts/creare-un-servizio/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>https://kappa710.github.io/prova/posts/creare-un-servizio/</guid>
      <description>&lt;p&gt;COSA DA SPIEGARE ```&lt;/p&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;[Unit]
Description=uWSGI instance to serve myproject
After=network.target

[Service]
User=sammy
Group=www-data
WorkingDirectory=/home/sammy/myproject
Environment=&amp;#34;PATH=/home/sammy/myproject/myprojectenv/bin&amp;#34;
ExecStart=/home/sammy/myproject/myprojectenv/bin/uwsgi --ini myproject.ini

[Install]
WantedBy=multi-user.target
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;servizio è deamon che puo essere avviato e stoppato&lt;/p&gt;
&lt;p&gt;crea un nuovo file che termina .service nella cartella /etc/systemd/system&lt;/p&gt;
&lt;p&gt;FARE ESEMPIO con serivio per attivare server fastapi in python&lt;/p&gt;
&lt;p&gt;server_python.service&lt;/p&gt;
&lt;p&gt;3 parti di un file che definisce un servizio&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;[Unit]: contiene metadati e dipendenze&lt;/li&gt;
&lt;li&gt;[Service]: cosa e come fa il servizio&lt;/li&gt;
&lt;li&gt;[Install]: come servizio deve essere installato (per installato si intende quando utente usa per esempio systemctl enable service)&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;[Unit]&lt;/p&gt;</description>
    </item>
    <item>
      <title></title>
      <link>https://kappa710.github.io/prova/posts/nginx/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>https://kappa710.github.io/prova/posts/nginx/</guid>
      <description>&lt;p&gt;NEL CASO USIAMO PYTHON e FRAMEWORK BACKEND&lt;br&gt;
startare con uvicorn che crera un socket da zero nella path  indicata (uds sta per unix domain socket)
&lt;code&gt;uvicorn nome_file:istanza_principale_di_framewrok --uds ~/fast.sock&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;CONFIGURAZIONE&lt;/p&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;server {
    listen 80;
    listen [::]:80;

    server_name 192.168.22.87;

    location / {
        proxy_pass http://unix:/home/user/fast.sock;
        include proxy_params;
    }
}
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;SERVER_NAME
server_name aiuta nginx a fare routing in questo caso se richiesta viene da chi si è interfacciato a servizio usando ip 192.168.22.87 ( fa x)
si usa anche per diversi nomi di dominio
per capire come funziona server_name usa questa guida : &lt;a href=&#34;https://statuslist.app/nginx/server_name/&#34;&gt;NGINX server_name: How to use it - Status List&lt;/a&gt;&lt;/p&gt;</description>
    </item>
    <item>
      <title></title>
      <link>https://kappa710.github.io/prova/posts/trucchetti-per-lavorare-coi-file/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>https://kappa710.github.io/prova/posts/trucchetti-per-lavorare-coi-file/</guid>
      <description>&lt;h4 id=&#34;specificare-directory-corrente&#34;&gt;Specificare directory corrente&lt;/h4&gt;
&lt;p&gt;&lt;code&gt;./  &lt;/code&gt;
Serve per non creare problemi perché se abbiamo file &lt;code&gt;-file01&lt;/code&gt;
&lt;code&gt; cat -file01&lt;/code&gt; viene visto da shell come &lt;code&gt;cat -f ile01 &lt;/code&gt; allora dobbiamo usare &lt;code&gt; cat ./-file01&lt;/code&gt;&lt;/p&gt;
&lt;h5 id=&#34;accedere-a-file-con-spazi-vuoti-nel-nome&#34;&gt;Accedere a file con spazi vuoti nel nome&lt;/h5&gt;
&lt;p&gt;si accede a file con spazi vuoti nel nome usando gli apostrofi
&lt;code&gt; cat &amp;quot;file con spazi vuoi&amp;quot;&lt;/code&gt;
oppure si usa la &lt;br&gt;
&lt;code&gt;cat file\ con\ spazi\ vuoti&lt;/code&gt;&lt;/p&gt;
&lt;h4 id=&#34;caratteri-speciali&#34;&gt;Caratteri speciali&lt;/h4&gt;
&lt;p&gt;&lt;code&gt;*&lt;/code&gt; per indicare tutte le possibili sequenze
&lt;code&gt; file *.pdf&lt;/code&gt; vale per ogni file che termina con .pdf&lt;/p&gt;</description>
    </item>
  </channel>
</rss>
